[ { "title": "jQuery 基础知识", "url": "/posts/jquery/", "categories": "转载", "tags": "jQuery", "date": "2020-12-28 09:24:00 +0800", "snippet": "jQuery 语法jQuery 语法jQuery 语法是通过选取 HTML 元素，并对选取的元素执行某些操作。基础语法：$(selector).action() $ 符号定义 jQuery selector查询和查找 HTML 元素 jQuery 的 action() 执行对元素的操作 $(this).hide() - 隐藏当前元素 $(“p.test”).hide() - 隐藏所有 class=”test” 的 &amp;lt;p&amp;gt; 元素 文档就绪事件$(document).ready(function(){ // 开始写 jQuery 代码..." }, { "title": "PHP基础", "url": "/posts/php/", "categories": "教程", "tags": "php", "date": "2020-12-17 14:55:00 +0800", "snippet": "PHP变量PHP 变量的规则 变量以 $ 符号开头，其后是变量的名称 变量名称必须以字母或下划线开头 变量名称不能以数字开头 变量名称只能包含字母数字字符和下划线（A-z、0-9 以及 _） 变量名称对大小写敏感（$y 与 $Y 是两个不同的变量）&amp;lt;?php$txt=&quot;Hello world!&quot;;$x=5;$y=10.5;?&amp;gt;PHP 变量作用域在 PHP 中，可以在脚本的任意位置对变量进行声明。PHP 有三种不同的变量作用域： local（局部） global（全局） static（静态）Local 和 Global 作用域..." }, { "title": "656", "url": "/posts/656/", "categories": "", "tags": "", "date": "2020-12-17 00:00:00 +0800", "snippet": "" }, { "title": "算法的时间空间复杂度", "url": "/posts/fuzadu/", "categories": "转载, 概念", "tags": "algorithm", "date": "2020-12-14 09:36:00 +0800", "snippet": "不同算法之间的优劣主要从时间和空间两个维度去衡量。 时间维度：执行当前算法所消耗的时间，通常用时间复杂度来描述 空间维度：执行当前算法需要占用多少内存空间，通常用空间复杂度来描述时间复杂度时间复杂度通用的表示方式大O符号表示法 \\(T(n)=O(f(n))\\)先看个例子for (int i = 0; i &amp;lt; n; i++) { j = i; j++;}通过大O符号表示法，这段代码的时间复杂度为：O(n), 为什么呢？在大O符号表示法中，时间复杂度的公式是: \\(T(n)=O(f(n))\\), 其中f(n)表示每行代码的执行次数之和，而O表示正比例关系，这个公..." }, { "title": "十大排序算法分类", "url": "/posts/paixu/", "categories": "转载", "tags": "algorithm, data structure", "date": "2020-12-11 18:00:00 +0800", "snippet": "十大排序算法分类十大排序算法基于比较与非比较维度的分类如下图所示：十大排序算法分类交换类冒泡排序冒泡排序，又称起泡排序，它是一种基于交换的排序典型，也是快排思想的基础。冒泡排序是一种稳定的排序算法，时间复杂度为O(n^2)。基本的思想：循环遍历多次，每次从前往后把大元素向后调，每次确定一个最大(最小)元素，多次后达到排序序列 时间复杂度相关，请参考 《算法的时间空间复杂度》基本思想（大元素往后调） 从第一个元素开始往后遍历，每到一个位置判断是否比后面的元素大，如果比后面元素大，那么就交换两者大小，然后继续向后，这样的话进行一轮之后就可以保证「最大的那个数被交换交换到最末的位置可以确定..." } ]
